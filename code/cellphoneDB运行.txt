# 开始总的分析流程！！！！！！！！！########
cpdb_file_path = '/home/data/t220310/ouqi/CPDB/v5.0.0/cellphonedb.zip'# 库路径
# 这里大家注意 需要修改癌症的名字
meta_file_path = '/home/data/t220310/ouqi/result3/PAAD/metadata.tsv' # 癌症metadata路径
counts_file_path ='/home/data/t220310/ouqi/result3/PAAD/CellphoneDB_count.txt'# 癌症CellphoneDB_count.txt路径
out_path = '/home/data/t220310/ouqi/result3/PAAD/result_cpdb'

from cellphonedb.src.core.methods import cpdb_statistical_analysis_method
cpdb_results = cpdb_statistical_analysis_method.call(
    cpdb_file_path = cpdb_file_path,                 # mandatory: CellphoneDB database zip file.
    meta_file_path = meta_file_path,                 # mandatory: tsv file defining barcodes to cell label.
    counts_file_path = counts_file_path,             # mandatory: normalized count matrix - a path to the counts file, or an in-memory AnnData object
    counts_data = 'hgnc_symbol',                     # defines the gene annotation in counts matrix.
    #microenvs_file_path = microenvs_file_path,       # optional (default: None): defines cells per microenvironment.
    score_interactions = True,                       # optional: whether to score interactions or not. 
    iterations = 1000,                               # denotes the number of shufflings performed in the analysis.
    threshold = 0.1,                                 # defines the min % of cells expressing a gene for this to be employed in the analysis.
    threads = 30,                                     # number of threads to use in the analysis.
    debug_seed = 42,                                 # debug randome seed. To disable >=0.
    result_precision = 3,                            # Sets the rounding for the mean values in significan_means.
    pvalue = 0.05,                                   # P-value threshold to employ for significance.
    subsampling = False,                             # To enable subsampling the data (geometri sketching).
    subsampling_log = False,                         # (mandatory) enable subsampling log1p for non log-transformed data inputs.
    subsampling_num_pc = 100,                        # Number of componets to subsample via geometric skectching (dafault: 100).
    subsampling_num_cells = 1000,                    # Number of cells to subsample (integer) (default: 1/3 of the dataset).
    separator = '|',                                 # Sets the string to employ to separate cells in the results dataframes "cellA|CellB".
    debug = False,                                   # Saves all intermediate tables employed during the analysis in pkl format.
    output_path = out_path,                          # Path to save results.
    output_suffix = None                             # Replaces the timestamp in the output files by a user defined string in the  (default: None).
    )
#### 一万八细胞大概五分钟左右跑完#######
#### 筛选query_minimum_score = 50的互作对##########
from cellphonedb.utils import search_utils
search_results = search_utils.search_analysis_results(
    query_cell_types_1 = ["Alkaliptosis","Anoikis","Autophagy","Cuproptosis",
"Entotie_cell_death","Extrinsic_apoptosis","Ferroptosis","Extrinsic_Intrinsic_apoptosis","None",
"Immunogenic_cell_death","Intrinsic_apoptosis",'Lysosome_dependent_cell_death',
"Necroptosis","Netotic_cell_death","Oxeiptosis","Parthanatos","Pyroptosis"],  # List of cells 1, will be paired to cells 2 (list or 'All').
    query_cell_types_2 = ["Alkaliptosis","Anoikis","Autophagy","Cuproptosis",
"Entotie_cell_death","Extrinsic_apoptosis","Ferroptosis","Extrinsic_Intrinsic_apoptosis","None",
"Immunogenic_cell_death","Intrinsic_apoptosis",'Lysosome_dependent_cell_death',
"Necroptosis","Netotic_cell_death","Oxeiptosis","Parthanatos","Pyroptosis"],     # List of cells 2, will be paired to cells 1 (list or 'All').
    significant_means = cpdb_results['significant_means'],          # significant_means file generated by CellphoneDB.
    deconvoluted = cpdb_results['deconvoluted'],                    # devonvoluted file generated by CellphoneDB.
    interaction_scores = cpdb_results['interaction_scores'],        # interaction score generated by CellphoneDB.
    query_minimum_score = 50,                                       # minimum score that an interaction must have to be filtered.
    separator = '|',                                                # separator (default: |) employed to split cells (cellA|cellB).
    long_format = True                                             # converts the output into a wide table, removing non-significant interactions
)
search_results.head()
search_results.to_csv("/home/data/t220310/ouqi/result3/PAAD/result_cpdb/search_results.txt", sep="\t")					  